// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`tests targeting both FixtureOptions and TestObject interfaces handles failing \`tests\` and \`fixtures\` gracefully 1`] = `
1. fixture: actual output does not match output.js

actual:
var ih = 'hey';

expected:
var hi = 'hey';
`;

exports[`tests targeting both FixtureOptions and TestObject interfaces handles failing \`tests\` and \`fixtures\` gracefully 2`] = `
2. black-box (preset): expected output to not change, but it did

actual:
var ih = 'hey';

expected:
var hi = 'hey';
`;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws if \`it.skip\` or \`it.only\` functions are not available in the global scope when using \`skip\`/\`only\` 1`] = `failed to validate configuration for test "1. fixture": testing environment does not support \`it.skip(...)\` method`;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws if \`it.skip\` or \`it.only\` functions are not available in the global scope when using \`skip\`/\`only\` 2`] = `failed to validate configuration for test "2. fixture": testing environment does not support \`it.only(...)\` method`;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws if \`it.skip\` or \`it.only\` functions are not available in the global scope when using \`skip\`/\`only\` 3`] = `failed to validate configuration for test "3. captains-log (explicit)": testing environment does not support \`it.skip(...)\` method`;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws if \`it.skip\` or \`it.only\` functions are not available in the global scope when using \`skip\`/\`only\` 4`] = `failed to validate configuration for test "4. black-box (preset)": testing environment does not support \`it.only(...)\` method`;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws if \`throws\` callback doesn't return \`true\` 1`] = `1. fixture: expected \`throws\`/\`error\` function to return true`;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws if \`throws\` callback doesn't return \`true\` 2`] = `3. fixture: expected \`throws\`/\`error\` function to return true`;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws if \`throws\` is not \`false\` but no error thrown 1`] = `
1. fixture: expected babel to throw an error, but it did not

actual:
false

expected:
true
`;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws if \`throws\` is not \`false\` but no error thrown 2`] = `
3. fixture: expected babel to throw an error, but it did not

actual:
false

expected:
true
`;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws if both \`only\` and \`skip\` are provided 1`] = `failed to validate configuration for test "1. fixture": cannot enable both \`skip\` and \`only\` in the same test`;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws if both \`only\` and \`skip\` are provided 2`] = `failed to validate configuration for test "2. black-box (preset)": cannot enable both \`skip\` and \`only\` in the same test`;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws if both \`throws\` and \`exec\`/\`execFixture\`/exec.js are provided 1`] = `failed to validate configuration for test "1. fixture": a fixture cannot be provided with \`throws\` or \`error\` and also contain an exec file`;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws if both \`throws\` and \`exec\`/\`execFixture\`/exec.js are provided 2`] = `failed to validate configuration for test "2. fixture": a fixture cannot be provided with \`throws\` or \`error\` and also contain an exec file`;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws if both \`throws\` and \`exec\`/\`execFixture\`/exec.js are provided 3`] = `failed to validate configuration for test "3. captains-log (explicit)": neither \`exec\` nor \`execFixture\` can be provided with \`throws\` or \`error\``;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws if both \`throws\` and \`exec\`/\`execFixture\`/exec.js are provided 4`] = `failed to validate configuration for test "4. black-box (preset)": neither \`exec\` nor \`execFixture\` can be provided with \`throws\` or \`error\``;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws if both \`throws\` and \`exec\`/\`execFixture\`/exec.js are provided 5`] = `failed to validate configuration for test "5. captains-log (explicit)": neither \`exec\` nor \`execFixture\` can be provided with \`throws\` or \`error\``;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws if both \`throws\` and \`exec\`/\`execFixture\`/exec.js are provided 6`] = `failed to validate configuration for test "6. black-box (preset)": neither \`exec\` nor \`execFixture\` can be provided with \`throws\` or \`error\``;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws if both \`throws\` and \`output\`/\`outputFixture\`/output.js are provided 1`] = `failed to validate configuration for test "1. fixture": a fixture cannot be provided with \`throws\` or \`error\` and also contain an output file`;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws if both \`throws\` and \`output\`/\`outputFixture\`/output.js are provided 2`] = `failed to validate configuration for test "2. fixture": a fixture cannot be provided with \`throws\` or \`error\` and also contain an output file`;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws if both \`throws\` and \`output\`/\`outputFixture\`/output.js are provided 3`] = `failed to validate configuration for test "3. captains-log (explicit)": neither \`output\` nor \`outputFixture\` can be provided with \`throws\` or \`error\``;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws if both \`throws\` and \`output\`/\`outputFixture\`/output.js are provided 4`] = `failed to validate configuration for test "4. black-box (preset)": neither \`output\` nor \`outputFixture\` can be provided with \`throws\` or \`error\``;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws if both \`throws\` and \`output\`/\`outputFixture\`/output.js are provided 5`] = `failed to validate configuration for test "5. captains-log (explicit)": neither \`output\` nor \`outputFixture\` can be provided with \`throws\` or \`error\``;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws if both \`throws\` and \`output\`/\`outputFixture\`/output.js are provided 6`] = `failed to validate configuration for test "6. black-box (preset)": neither \`output\` nor \`outputFixture\` can be provided with \`throws\` or \`error\``;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws when TEST_NUM_SKIP or TEST_NUM_ONLY are passed invalid values 1`] = `invalid environment variable "TEST_NUM_ONLY": invalid range -1`;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws when TEST_NUM_SKIP or TEST_NUM_ONLY are passed invalid values 2`] = `invalid environment variable "TEST_NUM_SKIP": invalid range 2--4`;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws when TEST_NUM_SKIP or TEST_NUM_ONLY are passed invalid values 3`] = `invalid environment variable "TEST_NUM_ONLY": invalid range 2-`;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws when TEST_NUM_SKIP or TEST_NUM_ONLY are passed invalid values 4`] = `invalid environment variable "TEST_NUM_SKIP": invalid range 2 - 4`;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws when TEST_NUM_SKIP or TEST_NUM_ONLY are passed invalid values 5`] = `invalid environment variable "TEST_NUM_ONLY": invalid range 5-2: 5 is greater than 2`;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws when TEST_NUM_SKIP or TEST_NUM_ONLY are passed invalid values 6`] = `invalid environment variable "TEST_NUM_SKIP": invalid range 2 4`;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws when TEST_NUM_SKIP or TEST_NUM_ONLY are passed invalid values 7`] = `invalid environment variable "TEST_NUM_ONLY": invalid range seven`;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws when TEST_NUM_SKIP or TEST_NUM_ONLY are passed invalid values 8`] = `invalid environment variable "TEST_NUM_SKIP": invalid range +1`;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws when babel transform errors and \`throws: false\` 1`] = `1. fixture: [BABEL] /repos/babel-plugin-tester/test/fixtures/option-throws-false/fixture/code.js: expected this error to be captured (While processing: "base$0")`;

exports[`tests targeting both FixtureOptions and TestObject interfaces throws when babel transform errors and \`throws: false\` 2`] = `3. fixture: [BABEL] /repos/babel-plugin-tester/test/fixtures/option-throws-false/fixture/code.js: expected this error to be captured (While processing: "base$0")`;

exports[`tests targeting the FixtureOptions interface can test that code.js babel output is unchanged 1`] = `
2. fixture: actual output does not match output.js

actual:
var ih = 'hey';

expected:
var hi = 'hey';
`;

exports[`tests targeting the FixtureOptions interface can test that code.js babel output is unchanged 2`] = `
4. fixture: actual output does not match output.js

actual:
var ih = 'hey';

expected:
var hi = 'hey';
`;

exports[`tests targeting the FixtureOptions interface can test that code.js babel output matches output.js 1`] = `
2. fixture: actual output does not match output.js

actual:
const hello = 'hey';

expected:
const olleh = 'hey';
`;

exports[`tests targeting the FixtureOptions interface can test that code.js babel output matches output.js 2`] = `
4. fixture: actual output does not match output.js

actual:
const hello = 'hey';

expected:
const olleh = 'hey';
`;

exports[`tests targeting the FixtureOptions interface handles failing exec.js file 1`] = `
1. fixture: [2mexpect([22m[31mreceived[39m[2m).[22mtoBe[2m([22m[32mexpected[39m[2m) // Object.is equality[22m

Expected: [32m"[7mpass[27med!"[39m
Received: [31m"[7mfail[27med!"[39m
`;

exports[`tests targeting the FixtureOptions interface handles failing exec.js file 2`] = `
2. fixture: [2mexpect([22m[31mreceived[39m[2m).[22mtoBe[2m([22m[32mexpected[39m[2m) // Object.is equality[22m

Expected: [32m"[7mpass[27med!"[39m
Received: [31m"[7mfail[27med!"[39m
`;

exports[`tests targeting the FixtureOptions interface throws if \`fixtures\` value is invalid 1`] = `failed to validate configuration: \`fixtures\`, if defined, must be a string`;

exports[`tests targeting the FixtureOptions interface throws if \`fixtures\` value is invalid 2`] = `failed to validate configuration: \`fixtures\`, if defined, must be a string`;

exports[`tests targeting the FixtureOptions interface throws if \`fixtures\` value is invalid 3`] = `failed to validate configuration: \`fixtures\`, if defined, must be a string`;

exports[`tests targeting the FixtureOptions interface throws if \`fixtures\` value is invalid 4`] = `failed to validate configuration: \`fixtures\`, if defined, must be a string`;

exports[`tests targeting the FixtureOptions interface throws if \`fixtures\` value is invalid 5`] = `failed to validate configuration: \`fixtures\`, if defined, must be a string`;

exports[`tests targeting the FixtureOptions interface throws if \`fixtures\` value is invalid 6`] = `failed to validate configuration: \`fixtures\`, if defined, must be a string`;

exports[`tests targeting the FixtureOptions interface throws if \`fixtures\` value is invalid 7`] = `failed to validate configuration: \`fixtures\`, if defined, must be a string`;

exports[`tests targeting the FixtureOptions interface throws if \`fixtures\` value is invalid 8`] = `failed to validate configuration: \`fixtures\`, if defined, must be a string`;

exports[`tests targeting the FixtureOptions interface throws if exec.js and code.js file in same directory 1`] = `failed to validate configuration for test "1. fixture": a fixture cannot contain both an exec file and a code or output file`;

exports[`tests targeting the FixtureOptions interface throws if exec.js and code.js file in same directory 2`] = `failed to validate configuration for test "2. fixture": a fixture cannot contain both an exec file and a code or output file`;

exports[`tests targeting the FixtureOptions interface throws if exec.js and output.js file in same directory 1`] = `failed to validate configuration for test "1. fixture": a fixture cannot contain both an exec file and a code or output file`;

exports[`tests targeting the FixtureOptions interface throws if exec.js and output.js file in same directory 2`] = `failed to validate configuration for test "2. fixture": a fixture cannot contain both an exec file and a code or output file`;

exports[`tests targeting the FixtureOptions interface throws if exec.js file is empty 1`] = `
1. fixture: attempted to execute babel output but it was empty. An empty string cannot be evaluated

actual:
false

expected:
true
`;

exports[`tests targeting the FixtureOptions interface throws if exec.js file is empty 2`] = `
2. fixture: attempted to execute babel output but it was empty. An empty string cannot be evaluated

actual:
false

expected:
true
`;

exports[`tests targeting the FixtureOptions interface throws with helpful message if there is a problem parsing code.js 1`] = `
1. fixture: /repos/babel-plugin-tester/test/fixtures/code-file-bad/fixture/code.js: Missing semicolon. (1:2)

[0m[31m[1m>[22m[39m[90m 1 |[39m []fd[33m;[39ms[33m;[39m][0m
[0m [90m   |[39m   [31m[1m^[22m[39m[0m
[0m [90m 2 |[39m[0m
`;

exports[`tests targeting the FixtureOptions interface throws with helpful message if there is a problem parsing code.js 2`] = `
2. fixture: /repos/babel-plugin-tester/test/fixtures/code-file-bad/fixture/code.js: Missing semicolon. (1:2)

[0m[31m[1m>[22m[39m[90m 1 |[39m []fd[33m;[39ms[33m;[39m][0m
[0m [90m   |[39m   [31m[1m^[22m[39m[0m
[0m [90m 2 |[39m[0m
`;

exports[`tests targeting the FixtureOptions interface throws with helpful message if there is a problem parsing exec.js 1`] = `
1. fixture: /repos/babel-plugin-tester/test/fixtures/exec-file-bad/fixture/exec.js: Missing semicolon. (1:2)

[0m[31m[1m>[22m[39m[90m 1 |[39m []fd[33m;[39ms[33m;[39m][0m
[0m [90m   |[39m   [31m[1m^[22m[39m[0m
[0m [90m 2 |[39m[0m
`;

exports[`tests targeting the FixtureOptions interface throws with helpful message if there is a problem parsing exec.js 2`] = `
2. fixture: /repos/babel-plugin-tester/test/fixtures/exec-file-bad/fixture/exec.js: Missing semicolon. (1:2)

[0m[31m[1m>[22m[39m[90m 1 |[39m []fd[33m;[39ms[33m;[39m][0m
[0m [90m   |[39m   [31m[1m^[22m[39m[0m
[0m [90m 2 |[39m[0m
`;

exports[`tests targeting the FixtureOptions interface throws with helpful message if there is a problem parsing options files 1`] = `
/repos/babel-plugin-tester/test/fixtures/options-js-bad/fixture/options.js: Unexpected token (4:2)

[0m [90m 2 |[39m   pluginOptions[33m:[39m {[0m
[0m [90m 3 |[39m     bar[33m:[39m[0m
[0m[31m[1m>[22m[39m[90m 4 |[39m   }[33m,[39m[0m
[0m [90m   |[39m   [31m[1m^[22m[39m[0m
[0m [90m 5 |[39m   presetOptions[33m:[39m {[0m
[0m [90m 6 |[39m     bar[33m:[39m[0m
[0m [90m 7 |[39m   }[0m
`;

exports[`tests targeting the PluginTesterOptions interface applies \`snapshot\` globally 1`] = `failed to validate configuration for test "2. captains-log (explicit)": neither \`output\` nor \`outputFixture\` can be provided with \`snapshot\` enabled`;

exports[`tests targeting the PluginTesterOptions interface applies \`snapshot\` globally 2`] = `failed to validate configuration for test "4. black-box (preset)": neither \`output\` nor \`outputFixture\` can be provided with \`snapshot\` enabled`;

exports[`tests targeting the PluginTesterOptions interface throws if \`babelOptions.babelrc: true\` and \`babelOptions.filename\` is unset 1`] = `failed to validate configuration for test "1. fixture": \`babelOptions.babelrc\` is enabled but \`babelOptions.filename\` was not provided`;

exports[`tests targeting the PluginTesterOptions interface throws if \`babelOptions.babelrc: true\` and \`babelOptions.filename\` is unset 2`] = `failed to validate configuration for test "2. black-box (preset)": \`babelOptions.babelrc\` is enabled but \`babelOptions.filename\` was not provided`;

exports[`tests targeting the PluginTesterOptions interface throws if \`describe\` or \`it\` functions are not available in the global scope 1`] = `incompatible testing environment: testing environment must define \`describe\` in its global scope`;

exports[`tests targeting the PluginTesterOptions interface throws if \`describe\` or \`it\` functions are not available in the global scope 2`] = `incompatible testing environment: testing environment must define \`it\` in its global scope`;

exports[`tests targeting the PluginTesterOptions interface throws if \`endOfLine\` is invalid 1`] = `failed to validate configuration: invalid \`endOfLine\` option`;

exports[`tests targeting the PluginTesterOptions interface throws if \`endOfLine\` is invalid 2`] = `1. black-box (preset): failed to validate configuration: invalid \`endOfLine\` option`;

exports[`tests targeting the PluginTesterOptions interface throws if \`titleNumbering\` is invalid 1`] = `failed to validate configuration: invalid \`titleNumbering\` option`;

exports[`tests targeting the PluginTesterOptions interface throws if \`titleNumbering\` is invalid 2`] = `failed to validate configuration: invalid \`titleNumbering\` option`;

exports[`tests targeting the PluginTesterOptions interface throws if \`titleNumbering\` is invalid 3`] = `failed to validate configuration: invalid \`titleNumbering\` option`;

exports[`tests targeting the PluginTesterOptions interface throws if \`titleNumbering\` is invalid 4`] = `failed to validate configuration: invalid \`titleNumbering\` option`;

exports[`tests targeting the PluginTesterOptions interface throws if both plugin- and preset-specific options are provided 1`] = `failed to validate configuration: cannot test a plugin and a preset simultaneously. Specify one set of options or the other`;

exports[`tests targeting the PluginTesterOptions interface throws if both plugin- and preset-specific options are provided 2`] = `failed to validate configuration: cannot test a plugin and a preset simultaneously. Specify one set of options or the other`;

exports[`tests targeting the PluginTesterOptions interface throws if both plugin- and preset-specific options are provided 3`] = `failed to validate configuration: cannot test a plugin and a preset simultaneously. Specify one set of options or the other`;

exports[`tests targeting the PluginTesterOptions interface throws if both plugin- and preset-specific options are provided 4`] = `failed to validate configuration: cannot test a plugin and a preset simultaneously. Specify one set of options or the other`;

exports[`tests targeting the PluginTesterOptions interface throws if both plugin- and preset-specific options are provided 5`] = `failed to validate configuration: cannot test a plugin and a preset simultaneously. Specify one set of options or the other`;

exports[`tests targeting the PluginTesterOptions interface throws if neither \`plugin\` nor \`preset\` are provided 1`] = `failed to validate configuration: must provide either \`plugin\` or \`preset\` option`;

exports[`tests targeting the PluginTesterOptions interface throws if neither \`plugin\` nor \`preset\` are provided 2`] = `failed to validate configuration: must provide either \`plugin\` or \`preset\` option`;

exports[`tests targeting the PluginTesterOptions interface throws if neither \`plugin\` nor \`preset\` are provided 3`] = `failed to validate configuration: must provide either \`plugin\` or \`preset\` option`;

exports[`tests targeting the PluginTesterOptions interface throws if setup throws 1`] = `1. fixture: setup function failed: bad setup`;

exports[`tests targeting the PluginTesterOptions interface throws if setup throws 2`] = `2. captains-log (explicit): setup function failed: bad setup`;

exports[`tests targeting the PluginTesterOptions interface throws if setup throws 3`] = `3. fixture: setup function failed: bad setup`;

exports[`tests targeting the PluginTesterOptions interface throws if setup throws 4`] = `4. black-box (preset): setup function failed: bad setup`;

exports[`tests targeting the PluginTesterOptions interface throws if teardown throws 1`] = `1. fixture: teardown function failed: bad teardown`;

exports[`tests targeting the PluginTesterOptions interface throws if teardown throws 2`] = `2. captains-log (explicit): teardown function failed: bad teardown`;

exports[`tests targeting the PluginTesterOptions interface throws if teardown throws 3`] = `3. fixture: teardown function failed: bad teardown`;

exports[`tests targeting the PluginTesterOptions interface throws if teardown throws 4`] = `4. black-box (preset): teardown function failed: bad teardown`;

exports[`tests targeting the TestObject interface accepts a string literal \`tests\` array item asserting babel output is unchanged 1`] = `
2. captains-log (explicit): expected output to not change, but it did

actual:
var ih = 'hey';

expected:
var hi = 'hey';
`;

exports[`tests targeting the TestObject interface accepts a string literal \`tests\` array item asserting babel output is unchanged 2`] = `
4. black-box (preset): expected output to not change, but it did

actual:
var ih = 'hey';

expected:
var hi = 'hey';
`;

exports[`tests targeting the TestObject interface can test that \`code\`/\`codeFixture\` and \`output\`/\`outputFixture\` babel output matches 1`] = `
9. captains-log (explicit): actual output does not match expected output

actual:
const hello = 'hey';

expected:
const olleh = 'hey';
`;

exports[`tests targeting the TestObject interface can test that \`code\`/\`codeFixture\` and \`output\`/\`outputFixture\` babel output matches 2`] = `
10. black-box (preset): actual output does not match expected output

actual:
const hello = 'hey';

expected:
const olleh = 'hey';
`;

exports[`tests targeting the TestObject interface overrides global \`snapshot\` with test-level \`snapshot\` 1`] = `failed to validate configuration for test "2. black-box (preset)": neither \`output\` nor \`outputFixture\` can be provided with \`snapshot\` enabled`;

exports[`tests targeting the TestObject interface takes a snapshot if \`snapshot\` is enabled: 1. captains-log (explicit) 1`] = `

var hi = 'hey';

      ↓ ↓ ↓ ↓ ↓ ↓

var ih = 'hey';

`;

exports[`tests targeting the TestObject interface takes a snapshot if \`snapshot\` is enabled: 2. black-box (preset) 1`] = `

var hi = 'hey';

      ↓ ↓ ↓ ↓ ↓ ↓

var ih = 'hey';

`;

exports[`tests targeting the TestObject interface throws if \`exec\`/\`execFixture\` is empty 1`] = `
1. captains-log (explicit): attempted to execute babel output but it was empty. An empty string cannot be evaluated

actual:
false

expected:
true
`;

exports[`tests targeting the TestObject interface throws if \`exec\`/\`execFixture\` is empty 2`] = `
2. black-box (preset): attempted to execute babel output but it was empty. An empty string cannot be evaluated

actual:
false

expected:
true
`;

exports[`tests targeting the TestObject interface throws if \`exec\`/\`execFixture\` is transformed into an empty string 1`] = `
1. captains-log (explicit): attempted to execute babel output but it was empty. An empty string cannot be evaluated

actual:
false

expected:
true
`;

exports[`tests targeting the TestObject interface throws if \`exec\`/\`execFixture\` is transformed into an empty string 2`] = `
2. black-box (preset): attempted to execute babel output but it was empty. An empty string cannot be evaluated

actual:
false

expected:
true
`;

exports[`tests targeting the TestObject interface throws if \`tests\` value is invalid 1`] = `failed to validate configuration: \`tests\` array item at index 0 must be a string, TestObject, or nullish`;

exports[`tests targeting the TestObject interface throws if \`tests\` value is invalid 2`] = `failed to validate configuration: \`tests\` array item at index 0 must be a string, TestObject, or nullish`;

exports[`tests targeting the TestObject interface throws if \`tests\` value is invalid 3`] = `failed to validate configuration: \`tests\` array item at index 0 must be a string, TestObject, or nullish`;

exports[`tests targeting the TestObject interface throws if \`tests\` value is invalid 4`] = `failed to validate configuration: \`tests\` array item at index 0 must be a string, TestObject, or nullish`;

exports[`tests targeting the TestObject interface throws if \`tests\` value is invalid 5`] = `failed to validate configuration: \`tests\` array item at index 0 must be a string, TestObject, or nullish`;

exports[`tests targeting the TestObject interface throws if \`tests\` value is invalid 6`] = `failed to validate configuration: \`tests\` array item at index 0 must be a string, TestObject, or nullish`;

exports[`tests targeting the TestObject interface throws if \`tests\` value is invalid 7`] = `failed to validate configuration: \`tests\`, if defined, must be an array or an object`;

exports[`tests targeting the TestObject interface throws if \`tests\` value is invalid 8`] = `failed to validate configuration: \`tests\`, if defined, must be an array or an object`;

exports[`tests targeting the TestObject interface throws if \`tests\` value is invalid 9`] = `failed to validate configuration: \`tests\` object property "test" must have a value of type string, TestObject, or nullish`;

exports[`tests targeting the TestObject interface throws if \`tests\` value is invalid 10`] = `failed to validate configuration: \`tests\` object property "test" must have a value of type string, TestObject, or nullish`;

exports[`tests targeting the TestObject interface throws if \`tests\` value is invalid 11`] = `failed to validate configuration: \`tests\` object property "test" must have a value of type string, TestObject, or nullish`;

exports[`tests targeting the TestObject interface throws if \`tests\` value is invalid 12`] = `failed to validate configuration: \`tests\` object property "test" must have a value of type string, TestObject, or nullish`;

exports[`tests targeting the TestObject interface throws if \`tests\` value is invalid 13`] = `failed to validate configuration: \`tests\` object property "test" must have a value of type string, TestObject, or nullish`;

exports[`tests targeting the TestObject interface throws if \`tests\` value is invalid 14`] = `failed to validate configuration: \`tests\` object property "test" must have a value of type string, TestObject, or nullish`;

exports[`tests targeting the TestObject interface throws if \`toMatchSnapshot\` function is not available in the value returned by \`expect()\` when \`snapshot\` is enabled 1`] = `failed to validate configuration for test "1. captains-log (explicit)": testing environment does not support \`expect(...).toMatchSnapshot\` method`;

exports[`tests targeting the TestObject interface throws if \`toMatchSnapshot\` function is not available in the value returned by \`expect()\` when \`snapshot\` is enabled 2`] = `failed to validate configuration for test "2. black-box (preset)": testing environment does not support \`expect(...).toMatchSnapshot\` method`;

exports[`tests targeting the TestObject interface throws if babel output is unchanged and \`snapshot\` is enabled 1`] = `
1. captains-log (explicit): code was unmodified but attempted to take a snapshot. If the code should not be modified, set \`snapshot: false\`

actual:
false

expected:
true
`;

exports[`tests targeting the TestObject interface throws if babel output is unchanged and \`snapshot\` is enabled 2`] = `
2. black-box (preset): code was unmodified but attempted to take a snapshot. If the code should not be modified, set \`snapshot: false\`

actual:
false

expected:
true
`;

exports[`tests targeting the TestObject interface throws if both \`code\` and \`codeFixture\` are provided 1`] = `failed to validate configuration for test "1. captains-log (explicit)": \`code\` cannot be provided with \`codeFixture\``;

exports[`tests targeting the TestObject interface throws if both \`code\` and \`codeFixture\` are provided 2`] = `failed to validate configuration for test "2. black-box (preset)": \`code\` cannot be provided with \`codeFixture\``;

exports[`tests targeting the TestObject interface throws if both \`code\`/\`codeFixture\` and \`exec\`/\`execFixture\` are provided 1`] = `failed to validate configuration for test "1. captains-log (explicit)": neither \`code\`, \`codeFixture\`, \`output\`, nor \`outputFixture\` can be provided with \`exec\` or \`execFixture\``;

exports[`tests targeting the TestObject interface throws if both \`code\`/\`codeFixture\` and \`exec\`/\`execFixture\` are provided 2`] = `failed to validate configuration for test "2. captains-log (explicit)": neither \`code\`, \`codeFixture\`, \`output\`, nor \`outputFixture\` can be provided with \`exec\` or \`execFixture\``;

exports[`tests targeting the TestObject interface throws if both \`code\`/\`codeFixture\` and \`exec\`/\`execFixture\` are provided 3`] = `failed to validate configuration for test "3. black-box (preset)": neither \`code\`, \`codeFixture\`, \`output\`, nor \`outputFixture\` can be provided with \`exec\` or \`execFixture\``;

exports[`tests targeting the TestObject interface throws if both \`code\`/\`codeFixture\` and \`exec\`/\`execFixture\` are provided 4`] = `failed to validate configuration for test "4. black-box (preset)": neither \`code\`, \`codeFixture\`, \`output\`, nor \`outputFixture\` can be provided with \`exec\` or \`execFixture\``;

exports[`tests targeting the TestObject interface throws if both \`exec\` and \`execFixture\` are provided 1`] = `failed to validate configuration for test "1. captains-log (explicit)": \`exec\` cannot be provided with \`execFixture\``;

exports[`tests targeting the TestObject interface throws if both \`exec\` and \`execFixture\` are provided 2`] = `failed to validate configuration for test "2. black-box (preset)": \`exec\` cannot be provided with \`execFixture\``;

exports[`tests targeting the TestObject interface throws if both \`output\` and \`outputFixture\` are provided 1`] = `failed to validate configuration for test "1. captains-log (explicit)": \`output\` cannot be provided with \`outputFixture\``;

exports[`tests targeting the TestObject interface throws if both \`output\` and \`outputFixture\` are provided 2`] = `failed to validate configuration for test "2. black-box (preset)": \`output\` cannot be provided with \`outputFixture\``;

exports[`tests targeting the TestObject interface throws if both \`output\`/\`outputFixture\` and \`exec\`/\`execFixture\` are provided 1`] = `failed to validate configuration for test "1. captains-log (explicit)": neither \`code\`, \`codeFixture\`, \`output\`, nor \`outputFixture\` can be provided with \`exec\` or \`execFixture\``;

exports[`tests targeting the TestObject interface throws if both \`output\`/\`outputFixture\` and \`exec\`/\`execFixture\` are provided 2`] = `failed to validate configuration for test "2. captains-log (explicit)": neither \`code\`, \`codeFixture\`, \`output\`, nor \`outputFixture\` can be provided with \`exec\` or \`execFixture\``;

exports[`tests targeting the TestObject interface throws if both \`output\`/\`outputFixture\` and \`exec\`/\`execFixture\` are provided 3`] = `failed to validate configuration for test "3. black-box (preset)": neither \`code\`, \`codeFixture\`, \`output\`, nor \`outputFixture\` can be provided with \`exec\` or \`execFixture\``;

exports[`tests targeting the TestObject interface throws if both \`output\`/\`outputFixture\` and \`exec\`/\`execFixture\` are provided 4`] = `failed to validate configuration for test "4. black-box (preset)": neither \`code\`, \`codeFixture\`, \`output\`, nor \`outputFixture\` can be provided with \`exec\` or \`execFixture\``;

exports[`tests targeting the TestObject interface throws if both \`snapshot\` and \`exec\`/\`execFixture\` are provided 1`] = `failed to validate configuration for test "1. captains-log (explicit)": neither \`exec\` nor \`execFixture\` can be provided with \`snapshot\` enabled`;

exports[`tests targeting the TestObject interface throws if both \`snapshot\` and \`exec\`/\`execFixture\` are provided 2`] = `failed to validate configuration for test "2. black-box (preset)": neither \`exec\` nor \`execFixture\` can be provided with \`snapshot\` enabled`;

exports[`tests targeting the TestObject interface throws if both \`snapshot\` and \`output\`/\`outputFixture\` are provided 1`] = `failed to validate configuration for test "1. captains-log (explicit)": neither \`output\` nor \`outputFixture\` can be provided with \`snapshot\` enabled`;

exports[`tests targeting the TestObject interface throws if both \`snapshot\` and \`output\`/\`outputFixture\` are provided 2`] = `failed to validate configuration for test "2. black-box (preset)": neither \`output\` nor \`outputFixture\` can be provided with \`snapshot\` enabled`;

exports[`tests targeting the TestObject interface throws if both \`snapshot\` and \`throws\` are provided 1`] = `
1. captains-log (explicit): expected babel to throw an error, but it did not

actual:
false

expected:
true
`;

exports[`tests targeting the TestObject interface throws if both \`snapshot\` and \`throws\` are provided 2`] = `
2. black-box (preset): expected babel to throw an error, but it did not

actual:
false

expected:
true
`;

exports[`tests targeting the TestObject interface throws if test object is non-nullish and missing both \`code\` and \`codeFixture\` 1`] = `failed to validate configuration for test "1. captains-log (explicit)": a string or object with a \`code\`, \`codeFixture\`, \`exec\`, or \`execFixture\` must be provided`;

exports[`tests targeting the TestObject interface throws if test object is non-nullish and missing both \`code\` and \`codeFixture\` 2`] = `failed to validate configuration for test "2. black-box (preset)": a string or object with a \`code\`, \`codeFixture\`, \`exec\`, or \`execFixture\` must be provided`;

exports[`tests targeting the TestObject interface throws if test object is non-nullish and missing both \`code\` and \`codeFixture\` 3`] = `failed to validate configuration for test "3. captains-log (explicit)": a string or object with a \`code\`, \`codeFixture\`, \`exec\`, or \`execFixture\` must be provided`;

exports[`tests targeting the TestObject interface throws if test object is non-nullish and missing both \`code\` and \`codeFixture\` 4`] = `failed to validate configuration for test "4. black-box (preset)": a string or object with a \`code\`, \`codeFixture\`, \`exec\`, or \`execFixture\` must be provided`;

exports[`tests targeting the TestObject interface throws with helpful message if \`codeFixture\`/\`outputFixture\`/\`execFixture\` cannot be read 1`] = `ENOENT: no such file or directory, open '/repos/babel-plugin-tester/fake-file.js'`;

exports[`tests targeting the TestObject interface throws with helpful message if \`codeFixture\`/\`outputFixture\`/\`execFixture\` cannot be read 2`] = `ENOENT: no such file or directory, open '/repos/babel-plugin-tester/fake-file.js'`;

exports[`tests targeting the TestObject interface throws with helpful message if \`codeFixture\`/\`outputFixture\`/\`execFixture\` cannot be read 3`] = `ENOENT: no such file or directory, open '/repos/babel-plugin-tester/fake-file.js'`;

exports[`tests targeting the TestObject interface throws with helpful message if there is a problem parsing \`code\`/\`codeFixture\` 1`] = `
1. captains-log (explicit): /repos/babel-plugin-tester/test/helpers/index.ts: Missing semicolon. (1:2)

[0m[31m[1m>[22m[39m[90m 1 |[39m []fd[33m;[39ms[33m;[39m][0m
[0m [90m   |[39m   [31m[1m^[22m[39m[0m
`;

exports[`tests targeting the TestObject interface throws with helpful message if there is a problem parsing \`code\`/\`codeFixture\` 2`] = `
2. black-box (preset): /repos/babel-plugin-tester/test/helpers/index.ts: Missing semicolon. (1:2)

[0m[31m[1m>[22m[39m[90m 1 |[39m []fd[33m;[39ms[33m;[39m][0m
[0m [90m   |[39m   [31m[1m^[22m[39m[0m
`;

exports[`tests targeting the TestObject interface throws with helpful message if there is a problem parsing \`code\`/\`codeFixture\` 3`] = `/repos/babel-plugin-tester/test/fixtures/code-file-bad: EISDIR: illegal operation on a directory, read`;

exports[`tests targeting the TestObject interface throws with helpful message if there is a problem parsing \`exec\`/\`execFixture\` 1`] = `
1. captains-log (explicit): /repos/babel-plugin-tester/test/helpers/index.ts: Missing semicolon. (1:2)

[0m[31m[1m>[22m[39m[90m 1 |[39m []fd[33m;[39ms[33m;[39m][0m
[0m [90m   |[39m   [31m[1m^[22m[39m[0m
`;

exports[`tests targeting the TestObject interface throws with helpful message if there is a problem parsing \`exec\`/\`execFixture\` 2`] = `/repos/babel-plugin-tester/test/fixtures/code-file-bad: EISDIR: illegal operation on a directory, read`;
